on:
  workflow_call:
    inputs:
      AZURE_CLI_VERSION:
        required: true
        type: string
      friendly_environment:
        required: true
        type: string
      github_environment:
        required: true
        type: string
    secrets:
      CWC_API_KEY:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
env:
  artifact_name: website
  artifact_zip_name: website.zip
  artifact_container_name: website_zip
jobs:
  deploy:
    name: Deploy (${{ inputs.friendly_environment }})
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: ${{ inputs.github_environment }}
    steps:
      - name: 'Download ${{ env.artifact_name }} Artifact'
        uses: actions/download-artifact@v3.0.0
        with:
          name: ${{ env.artifact_container_name }}
          path: ${{ env.artifact_container_name }}
      - name: 'Unzip File'
        run: |
          unzip ${{ github.workspace }}/${{ env.artifact_container_name }}/${{ env.artifact_zip_name }} -d ${{ env.artifact_name }}
      - name: 'Az CLI Login via OIDC'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: "Mask SWA Token"
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ inputs.AZURE_CLI_VERSION }}
          inlineScript: |
            echo "::add-mask::$(az staticwebapp secrets list -n ${{ env.SWA_NAME }} | jq -r '.properties.apiKey')"
      - name: "Get SWA Token"
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ inputs.AZURE_CLI_VERSION }}
          inlineScript: |
            echo "SWA_TOKEN=$(az staticwebapp secrets list -n ${{ env.SWA_NAME }} | jq -r '.properties.apiKey')" >> $GITHUB_ENV
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.SWA_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: '${{ github.workspace }}/${{ env.artifact_name }}/public'
          skip_app_build: true